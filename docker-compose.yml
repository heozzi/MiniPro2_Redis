volumes:            # 볼륨
  mysql_data:       # 커스텀 (mysql_data) 지정

networks:           # 네트워크 지정
  all_dir_network:  # 커스텀(all_dir_network) 지정
    driver: bridge  # 드라이버 타입 지정

# 서비스 파트 (db -> server->frontend -> nginx)
services:
  redis:
    container_name: redis
    image: redis
    networks:
      - all_dir_network
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/etc/redis/redis.conf
    command: [ "redis-server", "/etc/redis/redis.conf" ]

  zookeeper:
    image: "confluentinc/cp-zookeeper:latest"
    networks:
      - all_dir_network
    environment:
      # Zookeeper가 클라이언트(예: Kafka Broker)와 통신하는 포트
      ZOOKEEPER_CLIENT_PORT: 2181

  # 메세지 브로커, 메세지 저장하고 관리
  kafka:
    image: "confluentinc/cp-kafka:latest"
    depends_on:
      - zookeeper
    networks:
      - all_dir_network
    # 시그니처 포트, 변경가능함
    ports:
      - "9092:9092"
    volumes:
      - ./server.properties:/etc/kafka/server.properties
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:9092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,PLAINTEXT_HOST://34.212.241.179:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1